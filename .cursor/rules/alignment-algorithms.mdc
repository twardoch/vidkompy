---
description: For analyzing video frame alignment and synchronization algorithms, temporal drift correction, and spatial matching systems
globs: src/vidkompy/core/alignment_engine.py,src/vidkompy/core/dtw_aligner.py,src/vidkompy/core/frame_fingerprint.py,src/vidkompy/core/temporal_alignment.py
alwaysApply: false
---


# alignment-algorithms

## Frame Alignment Core
The intelligent frame alignment system uses a multi-stage pipeline for synchronizing video content:

### Frame Fingerprinting System (Importance: 95)
- Multi-algorithm perceptual hash fusion combining:
  - DCT-based pHash for frequency domain analysis
  - Average color intensity hash
  - Color moment statistics
  - Marr-Hildreth edge detection hash
- Weighted fingerprint generation with normalized distance metrics
- Color histogram correlation for additional frame similarity validation

### Temporal Alignment Engines (Importance: 98)
Two specialized engines optimized for different scenarios:

1. Full Engine
- Direct frame-to-frame pixel comparison
- Bidirectional matching with forward/backward passes
- Sliding window constraints for monotonic progression
- Zero drift by design through strict temporal mapping

2. Mask Engine  
- Content-aware comparison for letterboxed/pillarboxed videos
- Automatic non-black region detection
- Masked pixel comparison within content areas
- Maintains temporal monotonicity constraints

### Dynamic Time Warping Optimization (Importance: 92)
- Custom DTW implementation for video frame sequences
- Progressive refinement through temporal pyramid approach
- Keyframe anchoring for stable alignment points
- Adaptive window sizing based on content complexity

### Spatial Position Detection (Importance: 90)
- Template matching with normalized correlation
- Scale-invariant feature detection
- Sub-pixel precision position calculation
- Confidence scoring based on match quality

Core file paths:
```
src/vidkompy/core/alignment_engine.py
src/vidkompy/core/dtw_aligner.py 
src/vidkompy/core/frame_fingerprint.py
src/vidkompy/core/temporal_alignment.py
```

$END$